# Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2,
# the first 10 terms will be:

# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
#
# By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the
# even-valued terms

def fib_even_sum(val):
    fib_prev = 1
    fib_cur = 1
    ans = 0
    while fib_cur <= val:
        temp = fib_cur
        fib_cur = fib_cur + fib_prev
        fib_prev = temp
        if fib_cur % 2 == 0:
            ans += fib_cur
    return ans


print(fib_even_sum(10))
print(fib_even_sum(34))
print(fib_even_sum(60))
print(fib_even_sum(1000))
print(fib_even_sum(100000))
print(fib_even_sum(4000000))

